package ${package.Controller};


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.chou.common_module.context.ResponseData;
import com.chou.common_module.context.ResponseDataBuilder;

#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
        @Autowired
        private ${table.serviceName} i${entity}Service;

        /**
        * 分页查询 ${entity}
        * @param po
        * @param pageNo
        * @param pageSize
        */
        @GetMapping("/page")
        public ResponseData<IPage<${entity}VO>> get${entity}Page(Search${entity}Po po,
                                @RequestParam(name = "pagNo",defaultValue = "1") Integer pageNo,
                                @RequestParam(name = "pageSize",defaultValue = "10") Integer pageSize){
           IPage<${entity}VO> voPage =  i${entity}Service.getPage(po,pageNo,pageSize);
           return ResponseDataBuilder.buildSuccessData(voPage);
        }

        /**
         * 新增 ${entity}
         * @param po
         */
        @PostMapping("/add")
        public ResponseData<Boolean> add${entity}(@RequestBody ${entity}Po po){
            return ResponseDataBuilder.buildSuccessData(i${entity}Service.add${entity}(po));
        }

        /**
         * 详情查询 ${entity}
         * @param id
         */
        @GetMapping("/one")
        public ResponseData<${entity}VO> getOne(@RequestParam Long id){
            return ResponseDataBuilder.buildSuccessData(i${entity}Service.getOne(id));
        }

        /**
         * 修改操作 ${entity}
         * @param po
         */
        @PostMapping("/update")
        public ResponseData<Boolean> update${entity}(@RequestBody ${entity}Po po){
            return ResponseDataBuilder.buildSuccessData(i${entity}Service.update${entity}(po));
        }

        /**
        * 删除 ${entity}
        * @param id
        */
        @DeleteMapping("/delete")
        public ResponseData<Boolean> delete${entity}(@RequestParam Long id){
            return ResponseDataBuilder.buildSuccessData(i${entity}Service.delete(id));
        }




}

#end
